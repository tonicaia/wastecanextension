{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Documents/Personal/Polihack/wastecanextension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*global chrome*/import React,{useEffect,useState}from'react';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";var companies=['Google','Reddit','Foodpanda','Wikipedia','Dell'];var string=\"\";var icons={gray:'../public/16gray.png',green:'../public/16g.png'};function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),url=_useState2[0],setUrl=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),bifa=_useState4[0],setBifa=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),company=_useState6[0],setCompany=_useState6[1];useEffect(function(){var queryInfo={active:true,lastFocusedWindow:true};chrome.tabs&&chrome.tabs.query(queryInfo,function(tabs){var url=tabs[0].url;setUrl(url);companies.forEach(function(company){if(url.includes(company.toLowerCase())){setCompany(company);setBifa(true);}});});},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"h4\",{children:company})});}export default App;","map":{"version":3,"sources":["/Users/admin/Documents/Personal/Polihack/wastecanextension/src/App.js"],"names":["React","useEffect","useState","companies","string","icons","gray","green","App","url","setUrl","bifa","setBifa","company","setCompany","queryInfo","active","lastFocusedWindow","chrome","tabs","query","forEach","includes","toLowerCase"],"mappings":"iLAAA,iBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,WAAP,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChB,QADgB,CAEhB,QAFgB,CAGhB,WAHgB,CAIhB,WAJgB,CAKhB,MALgB,CAAlB,CAQA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CAEA,GAAMC,CAAAA,KAAK,CAAG,CACZC,IAAI,CAAE,sBADM,CAEZC,KAAK,CAAE,mBAFK,CAAd,CAKA,QAASC,CAAAA,GAAT,EAAe,eACSN,QAAQ,CAAC,EAAD,CADjB,wCACNO,GADM,eACDC,MADC,8BAEWR,QAAQ,CAAC,KAAD,CAFnB,yCAENS,IAFM,eAEAC,OAFA,8BAGiBV,QAAQ,CAAC,EAAD,CAHzB,yCAGNW,OAHM,eAGGC,UAHH,eAKbb,SAAS,CAAC,UAAM,CACd,GAAMc,CAAAA,SAAS,CAAG,CAACC,MAAM,CAAE,IAAT,CAAeC,iBAAiB,CAAE,IAAlC,CAAlB,CAGAC,MAAM,CAACC,IAAP,EAAeD,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBL,SAAlB,CAA6B,SAAAI,IAAI,CAAI,CAClD,GAAMV,CAAAA,GAAG,CAAGU,IAAI,CAAC,CAAD,CAAJ,CAAQV,GAApB,CACAC,MAAM,CAACD,GAAD,CAAN,CAEAN,SAAS,CAACkB,OAAV,CAAkB,SAAAR,OAAO,CAAI,CAC3B,GAAIJ,GAAG,CAACa,QAAJ,CAAaT,OAAO,CAACU,WAAR,EAAb,CAAJ,CAAyC,CACvCT,UAAU,CAACD,OAAD,CAAV,CACAD,OAAO,CAAC,IAAD,CAAP,CACD,CACF,CALD,EAMD,CAVc,CAAf,CAWH,CAfU,CAeR,EAfQ,CAAT,CAiBA,mBACE,YAAK,SAAS,CAAC,KAAf,uBAGI,oBAAKC,OAAL,EAHJ,EADF,CAOD,CAED,cAAeL,CAAAA,GAAf","sourcesContent":["/*global chrome*/\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst companies = [\n  'Google',\n  'Reddit',\n  'Foodpanda',\n  'Wikipedia',\n  'Dell'\n]\n\nlet string = \"\";\n\nconst icons = {\n  gray: '../public/16gray.png',\n  green: '../public/16g.png'\n}\n\nfunction App() {\n  const [url, setUrl] = useState('');\n  const [bifa, setBifa] = useState(false);\n  const [company, setCompany] = useState('');\n\n  useEffect(() => {\n    const queryInfo = {active: true, lastFocusedWindow: true};\n\n\n    chrome.tabs && chrome.tabs.query(queryInfo, tabs => {\n      const url = tabs[0].url;\n      setUrl(url);\n\n      companies.forEach(company => {\n        if (url.includes(company.toLowerCase())) {\n          setCompany(company);\n          setBifa(true);\n        }\n      })\n    });\n}, []);\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\"> */}\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\"/> */}\n        <h4>{company}</h4>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}